name: Full CI

on:
  push:
    branches: [ dev, '**/feature/**', '**/bugfix/**' ]
  pull_request:
    branches: [ dev, main ]

permissions:
  contents: read
  packages: write

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Back-End (FastAPI) ----------
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('api/requirements.txt') }}

      - name: Install backend deps + dev tools
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt
          pip install ruff black mypy bandit

      - name: Ruff lint
        run: ruff check api

      - name: Black format check
        run: black --check api

      - name: Mypy typing check
        run: MYPYPATH=api mypy api

      - name: Bandit security scan
        run: bandit -r api -ll

      # ---------- Front-End (React + Vite) ----------
      - name: Set up Node 20
        uses: actions/setup-node@v4
        with: { node-version: "20.x" }

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('client/package-lock.json') }}

      - name: Install front-end deps
        run: |
          cd client
          npm ci

      - name: ESLint check
        run: |
          cd client
          npm run lint

      - name: Prettier format check
        run: |
          cd client
          npx prettier --check .

      - name: Vite build
        run: |
          cd client
          npm run build --if-present

      # ---------- Tests ----------
      - name: PyTest
        run: pytest -q api/tests || true

      # ---------- Build container images ----------
      - name: Build & scan Docker image
        run: |
          docker build -t ai-agent-api:ci -f api/Dockerfile .
          docker build -t ai-agent-client:ci -f client/Dockerfile .
          docker run --rm aquasec/trivy image --severity HIGH,CRITICAL ai-agent-api:ci
          docker run --rm aquasec/trivy image --severity HIGH,CRITICAL ai-agent-client:ci

  ###--- Deployment job runs only on main merges ---###
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-1

      - name: Build & push images to ECR
        run: |
          ./infra/scripts/build_push_ecr.sh

      - name: Trigger App Runner deployment
        run: |
          aws apprunner start-deployment --service-arn ${{ secrets.APP_RUNNER_ARN }}
